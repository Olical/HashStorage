/**
 * HashStorage v0.0.0
 * https://github.com/Wolfy87/HashStorage
 * 
 * Oliver Caldwell (http://oli.me.uk)
 * Creative Commons Attribution 3.0 Unported License (http://creativecommons.org/licenses/by/3.0/)
 */(function(a){function b(){this.addEvents(),this.parseHash()}"use strict",b.prototype.addEvents=function(){var b=this;b.hashChangeListener=function(){b.parseHash()},a.addEventListener("hashchange",b.hashChangeListener)},b.prototype.removeEvents=function(){this.hashChangeListener&&a.removeEventListener("hashchange",this.hashChangeListener)},b.prototype.getHash=function(){var b=null;try{b=JSON.parse(a.location.hash.slice(1))}catch(c){b=!1}return b},b.prototype.isEmpty=function(a){var b=null;for(b in a)if(a.hasOwnProperty(b))return!1;return!0},b.prototype.setHash=function(b){this.isEmpty(b)||(a.location.hash="#"+JSON.stringify(b))},b.prototype.parseHash=function(){var a=null;a=this.getHash(),this.data?a&&this.merge(a,this.data):this.data=a||{},this.setHash(this.data)},b.prototype.merge=function(a,b){var c=null;for(c in a)a.hasOwnProperty(c)&&(typeof a[c]!="object"||a[c]instanceof Array?b[c]=a[c]:(typeof b[c]!="object"&&(b[c]={}),this.merge(a[c],b[c])))},a.HashStorage=b})(this);