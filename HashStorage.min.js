/**
 * HashStorage v1.0.0
 * https://github.com/Wolfy87/HashStorage
 * 
 * Oliver Caldwell (http://oli.me.uk)
 * Creative Commons Attribution 3.0 Unported License (http://creativecommons.org/licenses/by/3.0/)
 */(function(a){function b(b,c){a.addEventListener?a.addEventListener(b,c):a.attachEvent("on"+b,c)}function c(b,c){a.removeEventListener?a.removeEventListener(b,c):a.detachEvent("on"+b,c)}function d(){this.addEvents(),this.parseHash()}"use strict",d.prototype.addEvents=function(){var a=this;a.hashChangeListener=function(){a.parseHash()},b("hashchange",a.hashChangeListener)},d.prototype.removeEvents=function(){this.hashChangeListener&&c("hashchange",this.hashChangeListener)},d.prototype.getHash=function(){var b=null;try{b=JSON.parse(a.location.hash.slice(1))}catch(c){b=!1}return b},d.prototype.isEmpty=function(a){var b=null;for(b in a)if(a.hasOwnProperty(b))return!1;return!0},d.prototype.setHash=function(b){this.isEmpty(b)||(a.location.hash="#"+JSON.stringify(b))},d.prototype.set=function(a){this.merge(a,this.data),this.setHash(this.data)},d.prototype.parseHash=function(){var a=null;a=this.getHash(),this.data?a&&this.merge(a,this.data):this.data=a||{},this.setHash(this.data)},d.prototype.merge=function(a,b){var c=null;for(c in a)a.hasOwnProperty(c)&&(typeof a[c]!="object"||a[c]instanceof Array?b[c]=a[c]:(typeof b[c]!="object"&&(b[c]={}),this.merge(a[c],b[c])))},typeof define=="function"&&define.amd?define(function(){return d}):typeof module=="object"?module.exports=d:a.HashStorage=d})(this);